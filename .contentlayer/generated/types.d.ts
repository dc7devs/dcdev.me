// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer/core'
import * as Local from 'contentlayer/source-files'

export { isType } from 'contentlayer/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Project = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Project'
  title: string
  description: string
  status: 'to_begin' | 'doing' | 'progressing' | 'finishing' | 'done'
  coreTech: string
  toolsUsed: string[]
  projectType: 'FRONTEND' | 'BACKEND' | 'FULL-STACK' | 'API' | 'E-COMMERCE' | 'CMS' | 'LANDING_PAGE' | 'PWA' | 'CORPORATE_PORTALS' | 'RESERVATION & SHEDULING' | 'AUTOMATIONS & INTEGRATIONS' | 'DASHBOARDS' | 'E-LEARNING' | 'BLOGS & PORTFOLIO'
  projectClassification: 'personal study' | 'sketch study' | 'professional'
  imageURL?: string | undefined
  articleURL?: string | undefined
  githubSourceCodeURL?: string | undefined
  deploymentURL?: string | undefined
  startDate: date
}

export type Roadmap = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Roadmap'
  title: string
  description: string
  progressRoadmapURL: string
  roadmapImagePreviewURL: string
  status: 'no started' | 'in progress' | 'done'

}  

/** Nested types */
  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Project | Roadmap
export type DocumentTypeNames = 'Project' | 'Roadmap'

export type NestedTypes = never
export type NestedTypeNames = never

export type DataExports = {
  allDocuments: DocumentTypes[]
  allProjects: Project[]
  allRoadmaps: Roadmap[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Project: Project
  Roadmap: Roadmap
}

export type NestedTypeMap = {

}

 