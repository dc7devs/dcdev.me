{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts", "../../../content/definitions/Mastery.ts", "../../../content/definitions/Certificate.ts", "../../../content/definitions/Article.ts", "../../../content/definitions/Video.ts", "../../../content/definitions/Project.ts"],
  "sourcesContent": ["import { makeSource, defineDocumentType } from '@contentlayer/source-files';\r\n\r\nimport { Mastery } from './content/definitions/Mastery';\r\n\r\nexport default makeSource({\r\n    contentDirPath: 'content',\r\n    documentTypes: [Mastery],\r\n    disableImportAliasWarning: true,\r\n})\r\n", "import { defineDocumentType } from \"contentlayer/source-files\";\r\n\r\nimport { Certificate } from \"./Certificate\";\r\nimport { Article } from \"./Article\";\r\nimport { Video } from \"./Video\";\r\nimport { Project } from \"./Project\";\r\n\r\nconst sMastery = defineDocumentType(() => ({\r\n  name: 'sMastery',\r\n  fields: {\r\n    certificates: {\r\n      type: 'list',\r\n      of: Certificate,\r\n    },\r\n    article: {\r\n      type: 'nested',\r\n      of: Article,\r\n    },\r\n    video: {\r\n      type: 'nested',\r\n      of: Video,\r\n    },\r\n    project: {\r\n      type: 'nested',\r\n      of: Project,\r\n    }\r\n  },\r\n}))\r\n\r\nexport const Mastery = defineDocumentType(() => ({\r\n  name: 'Mastery',\r\n  filePathPattern: 'mastery/mastery.mdx',\r\n  fields: {\r\n    skills: { type: 'list', of: sMastery }\r\n  },\r\n}))", "import { defineDocumentType } from '@contentlayer/source-files';\r\n\r\nexport const Certificate = defineDocumentType(() => ({\r\n    name: 'Certificate',\r\n    fields: {\r\n        credentialCode: { type: 'string', required: true },\r\n        credentialURL: { type: 'string', required: true },\r\n        imageCertificateURL: { type: 'string' }\r\n    }\r\n}))", "import { defineDocumentType } from '@contentlayer/source-files';\r\n\r\nexport const Article = defineDocumentType(() => ({\r\n  name: 'Article',\r\n  fields: {\r\n      title: { type: 'string', required: true },\r\n      description: { type: 'markdown', require: true },\r\n      url: { type: 'string', required: true },\r\n      imageBanner: { type: 'string', required: true },\r\n      publishedAt: { type: 'date', required: true }\r\n  }\r\n}))\r\n", "import { defineDocumentType } from \"contentlayer/source-files\";\r\n\r\nexport const Video = defineDocumentType(() => ({\r\n    name: 'Video',\r\n    fields: {\r\n        youtubeURL: { type: 'string', required: true },\r\n        youtubeThumbURL: { type: 'string', required: true }\r\n    }\r\n}))\r\n", "import { defineDocumentType } from \"contentlayer/source-files\";\r\n\r\nexport const Project = defineDocumentType(() => ({\r\n    name: 'Project',\r\n    fields: {\r\n        githubURL: { type: 'string', required: true },\r\n        screenshot: { type: 'string' }\r\n    }\r\n}))"],
  "mappings": ";AAAA,SAAS,kBAAsC;;;ACA/C,SAAS,sBAAAA,2BAA0B;;;ACAnC,SAAS,0BAA0B;AAE5B,IAAM,cAAc,mBAAmB,OAAO;AAAA,EACjD,MAAM;AAAA,EACN,QAAQ;AAAA,IACJ,gBAAgB,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACjD,eAAe,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAChD,qBAAqB,EAAE,MAAM,SAAS;AAAA,EAC1C;AACJ,EAAE;;;ACTF,SAAS,sBAAAC,2BAA0B;AAE5B,IAAM,UAAUA,oBAAmB,OAAO;AAAA,EAC/C,MAAM;AAAA,EACN,QAAQ;AAAA,IACJ,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,aAAa,EAAE,MAAM,YAAY,SAAS,KAAK;AAAA,IAC/C,KAAK,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACtC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,aAAa,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,EAChD;AACF,EAAE;;;ACXF,SAAS,sBAAAC,2BAA0B;AAE5B,IAAM,QAAQA,oBAAmB,OAAO;AAAA,EAC3C,MAAM;AAAA,EACN,QAAQ;AAAA,IACJ,YAAY,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC7C,iBAAiB,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EACtD;AACJ,EAAE;;;ACRF,SAAS,sBAAAC,2BAA0B;AAE5B,IAAM,UAAUA,oBAAmB,OAAO;AAAA,EAC7C,MAAM;AAAA,EACN,QAAQ;AAAA,IACJ,WAAW,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC5C,YAAY,EAAE,MAAM,SAAS;AAAA,EACjC;AACJ,EAAE;;;AJDF,IAAM,WAAWC,oBAAmB,OAAO;AAAA,EACzC,MAAM;AAAA,EACN,QAAQ;AAAA,IACN,cAAc;AAAA,MACZ,MAAM;AAAA,MACN,IAAI;AAAA,IACN;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,IAAI;AAAA,IACN;AAAA,IACA,OAAO;AAAA,MACL,MAAM;AAAA,MACN,IAAI;AAAA,IACN;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,IAAI;AAAA,IACN;AAAA,EACF;AACF,EAAE;AAEK,IAAM,UAAUA,oBAAmB,OAAO;AAAA,EAC/C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACN,QAAQ,EAAE,MAAM,QAAQ,IAAI,SAAS;AAAA,EACvC;AACF,EAAE;;;AD/BF,IAAO,8BAAQ,WAAW;AAAA,EACtB,gBAAgB;AAAA,EAChB,eAAe,CAAC,OAAO;AAAA,EACvB,2BAA2B;AAC/B,CAAC;",
  "names": ["defineDocumentType", "defineDocumentType", "defineDocumentType", "defineDocumentType", "defineDocumentType"]
}
